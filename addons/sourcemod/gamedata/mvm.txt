/*
 * Copyright (C) 2021  Mikusch
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

"Games"
{
	"tf"
	{
		"Signatures"
		{
			"CTFBotSpawner::CTFBotSpawner"
			{
				"linux"		"@_ZN13CTFBotSpawnerC2EP10IPopulator"
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x56\x57\x8B\xF9\x89\x47\x04"
			}
			"CPopulationManager::AllocateBots"
			{
				"linux"		"@_ZN18CPopulationManager12AllocateBotsEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x14\x53\x8B\xD9\x80\xBB\x81\x05\x00\x00\x00"
			}
			"CTFBotSpawner::Spawn"
			{
				"linux"		"@_ZN13CTFBotSpawner5SpawnERK6VectorP10CUtlVectorI7CHandleI11CBaseEntityE10CUtlMemoryIS6_iEE"
				"windows"	"\x55\x8B\xEC\x81\xEC\x70\x01\x00\x00"
			}
			"CTFPlayer::RemovePlayerAttributes"
			{
				"linux"		"@_ZN9CTFPlayer22RemovePlayerAttributesEb"
				"windows"	"\x55\x8B\xEC\x53\x8B\xD9\x56\x8B\xB3\x30\x0A\x00\x00"
			}
			"CTFGameRules::GetTeamAssignmentOverride"
			{
				"linux"		"@_ZN12CTFGameRules25GetTeamAssignmentOverrideEP9CTFPlayerib"
				"windows"	"\x55\x8B\xEC\x83\xEC\x10\x81\x65\xF4\xFF\xFF\x0F\xFF\x8D\x45\xF0\x53"
			}
			"CTFPlayer::PostInventoryApplication"
			{
				"linux"		"@_ZN9CTFPlayer24PostInventoryApplicationEv"
				"windows"	"\x55\x8B\xEC\x51\x53\x8B\xD9\x56\x57\x8D\x8B\xB0\x19\x00\x00"
			}
			"CEconEntity::UpdateModelToClass"
			{
				"linux"		"@_ZN11CEconEntity18UpdateModelToClassEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x0C\x53\x56\x8B\x35\x2A\x2A\x2A\x2A\x8B\xD9"
			}
			"CBaseCombatCharacter::Weapon_Detach"
			{
				"linux"		"@_ZN20CBaseCombatCharacter13Weapon_DetachEP17CBaseCombatWeapon"
				"windows"	"\x55\x8B\xEC\x51\x53\x8B\x1D\x2A\x2A\x2A\x2A\x8B\xC1"
			}
		}
		"Offsets"
		{
			"CTFPlayer::Event_Killed"
			{
				"linux"		"67"
				"windows"	"66"
			}
			"CTFPlayer::m_bIsMissionEnemy"
			{
				"linux"		"8820"
				"windows"	"8816"
			}
			"CTFBotSpawner::m_class"
			{
				"linux"		"8"
				"windows"	"8"
			}
			"CTFBotSpawner::m_iszClassIcon"
			{
				"linux"		"12"
				"windows"	"12"
			}
			"CTFBotSpawner::m_health"
			{
				"linux"		"16"
				"windows"	"16"
			}
			"CTFBotSpawner::m_scale"
			{
				"linux"		"20"
				"windows"	"20"
			}
			"CTFBotSpawner::m_defaultAttributes::m_attributeFlags"
			{
				"linux"		"76"
				"windows"	"76"
			}
			"CTFBotSpawner::m_defaultAttributes::m_items"
			{
				"linux"		"84"
				"windows"	"84"
			}
			"CTFBotSpawner::m_defaultAttributes::m_itemsAttributes"
			{
				"linux"		"104"
				"windows"	"104"
			}
			"CTFBotSpawner::m_defaultAttributes::m_characterAttributes"
			{
				"linux"		"80"
				"windows"	"80"
			}
		}
		"Functions"
		{
			"CTFBotSpawner::CTFBotSpawner"
			{
				"signature"	"CTFBotSpawner::CTFBotSpawner"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"address"
				"arguments"
				{
					"populator"
					{
						"type"	"int"
					}
				}
			}
			"CPopulationManager::AllocateBots"
			{
				"signature"	"CPopulationManager::AllocateBots"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"ignore"
			}
			"CTFBotSpawner::Spawn"
			{
				"signature"	"CTFBotSpawner::Spawn"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"address"
				"arguments"
				{
					"rawHere"
					{
						"type"	"vectorptr"
						"flags"	"byref"
					}
					"result"
					{
						"type"	"int"
					}
				}
			}
			"CTFGameRules::GetTeamAssignmentOverride"
			{
				"signature"	"CTFGameRules::GetTeamAssignmentOverride"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"ignore"
				"arguments"
				{
					"pTFPlayer"
					{
						"type"	"cbaseentity"
					}
					"iDesiredTeam"
					{
						"type"	"int"
					}
					"bAutoBalance"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayer::Event_Killed"
			{
				"offset"	"CTFPlayer::Event_Killed"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"info"
					{
						"type"	"int"
					}
				}
			}
		}
	}
}
